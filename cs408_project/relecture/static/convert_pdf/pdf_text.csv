0,"""WELCOME! (download slides and . pyfiles  follow along!) 6.0001 LECTURE 1 16.0001 LECTURE 1"""
1,"""TODAY course info what is computation python basics mathematical operations python variables and types NOTE:  slides and code files up before each lecture ohighly encourage you to download them before lecture otake notes and run code files when I do obring computers to answer  in-class practice exercises! 26.0001 LECTURE 1"""
2,"""FAST PACED COURSE Position yourself to succeed! read  psets when they come out  and come back to them later use late days in emergency situations New to programming?  PRACTICE. PRACTICE? PRACTICE!   download code before lecture and follow along do MITx finger exercises   66.0001 LECTURE 1"""
3,"""PRACTICE 76.0001 LECTURE 1 PROBLEM  SOLVING PROGRAMMING  SKILLKNOWLEDGE  OF CONCEPTS"""
4,"""TOPICS represent knowledge with  data structures iteration and recursion as computational metaphors abstraction of procedures and data types organize and modularize systems using object classes  and methods different classes of  algorithms , searching and sorting complexity of algorithms 6.0001 LECTURE 1 8"""
5,"""WHAT DOES A COMPUTER DO Fundamentally: performs  calculations a billion calculations per second! remembers results 100s of gigabytes of storage! What kinds of calculations? built-into the language ones that  you define as the programmer computers  only know  what you tell them 6.0001 LECTURE 1 9"""
6,"""TYPES OF KNOWLEDGE declarative knowledge  is statements of fact . someone will win a Google  Cardboard before class ends imperative knowledge  is a recipe  - 1)Students sign up for raffle 2)Ana opens her IDE3)Ana chooses a random number between 1 stand nthresponder 4)Ana finds the number in the responders sheet. Winner! 6.0001 LECTURE 1 10"""
7,"""A NUMERICAL EXAMPLE square  root of a number  x is y such that  y*y =  xrecipe for deducing square root of a number  x ( 16)1)Start with a  guess, g2)If g*gis close enough to  x, stop and say  g is the  answer  3)Otherwise make a  new guess  by averaging  g and x/g4)Using the new guess,  repeat process until close enough 6.0001 LECTURE 1 11gg*g x/g (g+x /g)/2 3916/3 4.17 4.17 17.36 3.837 4.0035 4.0035 16.0277 3.997 4.000002"""
8,"""WHAT IS A RECIPE 1)sequence of simple  steps 2)flow of control process that specifies when each  step is executed 3)a means of determining  when to stop 1+2+3 = an algorithm !6.0001 LECTURE 1 12"""
9,"""COMPUTERS ARE MACHINES how to capture a recipe in a mechanical process fixed program  computer calculator stored program  computer machine stores and executes instructions 6.0001 LECTURE 1 13"""
10,"""BASIC MACHINE ARCHITECTURE 6.0001 LECTURE 1 14MEMORY CONTROL UNITARITHMETIC  LOGIC UNIT INPUT OUTPUT program counter do primitive ops"""
11,"""STORED PROGRAM COMPUTER sequence of  instructions stored  inside computer built from predefined set of primitive instructions 1)arithmetic and logic 2)simple tests 3)moving data special program (interpreter)  executes each  instruction in order use tests to change flow of control through sequence stop when done 6.0001 LECTURE 1 15"""
12,"""BASIC PRIMITIVES Turing showed that you can  compute anything  using 6  primitives modern programming languages have more  convenient set of primitives can abstract methods to  create new primitives anything computable in one language is computable in  any other programming language 6.0001 LECTURE 1 16"""
13,"""CREATING RECIPES a programming language provides a set of primitive  operations expressions are complex but legal combinations of  primitives in a programming language expressions and computations have  values and meanings in a programming language 6.0001 LECTURE 1 17"""
14,"""ASPECTS OF LANGUAGES primitive constructs English: words programming language: numbers, strings, simple  operators 6.0001 LECTURE 1 18"""
15,"""ASPECTS OF LANGUAGES syntax English:  ""cat dog boy ""     not syntactically valid ""cat hugs boy"" syntactically valid programming language:  ""hi""5not syntactically valid 3.2*5syntactically valid 6.0001 LECTURE 1 19"""
16,"""ASPECTS OF LANGUAGES static semantics is which syntactically valid strings  have meaning English:  ""I are hungry"" syntactically valid but static semantic error programming language:  3.2*5syntactically valid 3+""hi""static semantic error 6.0001 LECTURE 1 20"""
17,"""ASPECTS OF LANGUAGES semantics is the meaning associated with a  syntactically correct string of symbols with no static  semantic errors English: can have many meanings  ""Flying planes  can be dangerous"" programming languages: have only one meaning but may  not be what programmer intended 6.0001 LECTURE 1 21"""
18,"""WHERE THINGS GO WRONG syntactic errors common and easily caught static semantic errors some languages check for these before running program can cause unpredictable behavior no semantic errors but  different meaning than what  programmer intended program crashes, stops running program runs forever program gives an answer but different than expected 6.0001 LECTURE 1 22"""
19,"""PYTHON PROGRAMS a program is a sequence of definitions and commands definitions  evaluated  commands  executed by Python interpreter in a shell commands (statements) instruct interpreter to do  something can be typed directly in a  shellor stored in a  filethat  is read into the shell and  evaluated Problem  Set 0 will introduce you to these in Anaconda 6.0001 LECTURE 1 23"""
20,"""OBJECTS programs manipulate  data objects objects have a  typethat defines the kinds of things  programs can do to them Ana is a human so she can walk, speak English, etc. Chewbacca is a  wookie so he can  mwaaarhrhh  objects are scalar (cannot be subdivided) non-scalar (have internal structure that can be accessed) 6.0001 LECTURE 1 24"""
21,"""SCALAR OBJECTS intrepresent  integers , ex.  5float represent  real numbers , ex.  3.27bool represent  Booleanvalues  Trueand FalseNoneTypespecialand has one value,  Nonecan use  type() to see the type of an object >>> type(5) int>>> type(3.0) float 6.0001 LECTURE 1 25"""
22,"""TYPE CONVERSIONS (CAST) can  convert object of one type to another float(3)converts integer  3 to float  3.0int(3.9)truncates float  3.9to integer  36.0001 LECTURE 1 26"""
23,"""PRINTING TO CONSOLE to show output from code to a user, use  printcommand In [11]: 3+2 Out[11]: 5 In [12]: print(3+2 )56.0001 LECTURE 1 27"""
24,"""EXPRESSIONS combine objects and operators  to form expressions an expression has a  value , which has a type syntax for a simple expression <object> <operator> <object> 6.0001 LECTURE 1 28"""
25,"""OPERATORS ON  ints and floats i+jthe sumi-jthe difference i*jthe product i/jdivision i%jthe remainder when iis divided by  ji**jito the  power of j6.0001 LECTURE 1 29if both are  ints , result is  int if either or both are floats, result is float result  is float"""
26,"""SIMPLE OPERATIONS parentheses used to tell Python to do these  operations first operator precedence  without parentheses ***/+ and executed left to right, as appear in expression 6.0001 LECTURE 1 30"""
27,"""BINDING VARIABLES AND  VALUES equal sign is an  assignment of a value to a variable  namepi = 3.14159 pi_approx= 22/7value stored in computer memory an assignment binds name to value retrieve value associated with name or variable by  invoking the name, by typing  pi6.0001 LECTURE 1 31"""
28,"""ABSTRACTING EXPRESSIONS why  give names  to values of expressions? to  reuse names  instead of values easier to change code later pi = 3.14159 radius = 2.2 area = pi*(radius**2) 6.0001 LECTURE 1 32"""
29,"""PROGRAMMING vs MATH  pi = 3.14159 radius = 2.2 # area of circle area = pi*(radius**2) radius = radius+1 6.0001 LECTURE 1 33"""
30,"""CHANGING BINDINGS can  re-bind variable names using new assignment  statements previous value may still stored in memory but lost the  handle for it value for area does not change until you tell the  computer to do the calculation again 6.0001 LECTURE 1 34piradius area 3.142.215.1976 3.2pi = 3.14 radius = 2.2 area = pi*(radius**2 )radius = radius+1"""
